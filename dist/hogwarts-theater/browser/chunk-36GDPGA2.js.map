{
  "version": 3,
  "sources": ["src/app/cocktail-details/cocktail-details.component.ts", "src/app/cocktail-details/cocktail-details.component.html"],
  "sourcesContent": ["import {\r\n  Component,\r\n  computed,\r\n  inject,\r\n  Input,\r\n  Signal,\r\n  signal,\r\n} from '@angular/core';\r\nimport { CocktailService } from '../shared/services/cocktail.service';\r\nimport { Cocktail } from '../shared/models/cocktail.model';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-cocktail-details',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './cocktail-details.component.html',\r\n  styleUrl: './cocktail-details.component.scss',\r\n})\r\nexport class CocktailDetailsComponent {\r\n  @Input('id')\r\n  id: string = '';\r\n\r\n  cocktailService = inject(CocktailService);\r\n  cocktail$: Observable<Cocktail | undefined>;\r\n  favorites = signal<string[]>([]);\r\n\r\n  getAlcoholic(isAlcoholic:boolean): string {\r\n    return isAlcoholic ? 'Alcoholic' : 'Non alcoholic';\r\n  }\r\n\r\n  isFavorite: Signal<boolean> = computed(() =>\r\n    this.favorites().includes(this.id)\r\n  );\r\n\r\n  toggleFavorite() {\r\n   this.cocktailService.toggleFavorite(this.id);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cocktail$ = this.cocktailService.getCocktailById(this.id);\r\n    this.favorites = this.cocktailService.favorites;\r\n  }\r\n}\r\n", "<div class=\"details-container\">\r\n  <!-- Back Button -->\r\n  <button class=\"back-button\" onclick=\"history.back()\">\r\n    <i class=\"fas fa-arrow-left\"></i> Back\r\n  </button>\r\n\r\n  <!-- Cocktail Details Section -->\r\n  <div class=\"details-card\">\r\n    <ng-container *ngIf=\"cocktail$ | async as cocktail\">\r\n      <div class=\"image-section\">\r\n        <img\r\n          [src]=\"cocktail.imageUrl\"\r\n          [alt]=\"cocktail.name\"\r\n          class=\"cocktail-image\"\r\n        />\r\n      </div>\r\n      <div class=\"info-section\">\r\n        <!-- Title and Bookmark -->\r\n        <div class=\"title-row\">\r\n          <h1 class=\"cocktail-name\">{{ cocktail.name }}</h1>\r\n          <button class=\"bookmark-checkbox\" (click)=\"toggleFavorite()\">\r\n          <span class=\"icon-star\" [class.active]=\"isFavorite()\"></span>\r\n          </button>\r\n        </div>\r\n        <!-- Type -->\r\n        <p>\r\n          <strong>Type:</strong>\r\n          <span class=\"badge alcoholic\">{{\r\n            getAlcoholic(cocktail.isAlcoholic)\r\n          }}</span>\r\n        </p>\r\n        <!-- Ingredients -->\r\n        <p><strong>Ingredients:</strong></p>\r\n        <ul class=\"ingredients-list\">\r\n          <li *ngFor=\"let item of cocktail.ingredients\">{{ item }}</li>\r\n        </ul>\r\n        <!-- Instructions -->\r\n        <p><strong>Instructions:</strong></p>\r\n        <p class=\"instructions\">\r\n          {{ cocktail.instructions }}\r\n        </p>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "item_r3", "\u0275\u0275elementContainerStart", "\u0275\u0275element", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggleFavorite", "\u0275\u0275template", "CocktailDetailsComponent_ng_container_5_li_18_Template", "\u0275\u0275property", "cocktail_r4", "imageUrl", "\u0275\u0275sanitizeUrl", "name", "\u0275\u0275classProp", "isFavorite", "getAlcoholic", "isAlcoholic", "ingredients", "\u0275\u0275textInterpolate1", "instructions", "CocktailDetailsComponent", "constructor", "id", "cocktailService", "inject", "CocktailService", "favorites", "signal", "computed", "includes", "ngOnInit", "cocktail$", "getCocktailById", "selectors", "inputs", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "CocktailDetailsComponent_ng_container_5_Template", "\u0275\u0275pipeBind1", "CommonModule", "NgForOf", "NgIf", "AsyncPipe", "styles", "_CocktailDetailsComponent"]
}
